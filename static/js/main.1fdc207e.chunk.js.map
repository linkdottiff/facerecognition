{"version":3,"sources":["Components/Logo/ai.png","Components/Navigation/Navigation.js","Components/Logo/Logo.js","Components/InputImageURL/InputImageURL.js","Components/Rank/Rank.js","Components/Signin/Signin.js","Components/Register/Register.js","Components/FaceDetection/FaceDetection.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","onRouteChange","isSignedIn","style","display","justifyContent","className","onClick","Logo","options","max","height","width","alt","src","brain","InputImageURL","onInputChange","onClickInput","type","placeholder","onChange","Rank","Signin","id","htmlFor","name","value","Register","FaceDetection","url","box","map","data","key","top","topRow","bottom","bottomRow","right","rightCol","left","leftCol","particlesOptions","app","Clarifai","App","apiKey","event","setState","input","target","calculateFaceBox","clariFace","outputs","regions","region","region_info","bounding_box","image","document","getElementById","Number","bounding","i","top_row","bottom_row","left_col","right_col","displayFaceBox","boxData","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","console","log","route","this","params","Component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.1fdc207e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ai.4551b0d3.png\";","import React from 'react';\r\n\r\nconst Navigation = ({onRouteChange, isSignedIn}) => {\r\n        if(isSignedIn){\r\n                return (\r\n                <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                        <p \r\n                        className=\"f3 link dim pa3 pointer white underline\"\r\n                        onClick={() => onRouteChange('signin')}\r\n                        >\r\n                        Sign out\r\n                        </p>\r\n                </nav>\r\n                )\r\n            }else{\r\n                return (\r\n                <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                        <p \r\n                        className=\"f3 link dim pa3 pointer white underline\"\r\n                        onClick={() => onRouteChange('signin')}\r\n                        >\r\n                        Sign in\r\n                        </p>\r\n                        <p \r\n                        className=\"f3 link dim pa3 pointer white underline\"\r\n                        onClick={() => onRouteChange('register')}\r\n                        >\r\n                        Register\r\n                        </p>\r\n                </nav>\r\n                )\r\n            }\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport brain from './ai.png';\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <Tilt className=\"Tilt shadow-5 pa3 ma3 bg-silver\" options={{ max : 35 }} style={{ height: 100, width: 100 }} >\r\n            <div className=\"Tilt-inner\"> \r\n               <img alt=\"brain\" src={brain}></img>\r\n            </div>\r\n        </Tilt>\r\n    );\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport \"./InputImageURL.css\";\r\n\r\nconst InputImageURL = ({onInputChange, onClickInput}) => {\r\n    return (\r\n        <div>\r\n            <div className=\"f4 center white pa3\">\r\n                        {`The magic AI will detect if there's a face in your picture. Give it a try!`}\r\n            </div>\r\n            <div className=\"center pattern w-50 pa4 br3\">\r\n                        <input \r\n                        className=\"input-reset ba b--black-20 pa2 mb2 db w-70\" \r\n                        type=\"text\" \r\n                        placeholder=\"Enter image url\"\r\n                        onChange={onInputChange}\r\n                        />\r\n                        <button \r\n                        className=\"grow w-30 f6 link ba mb2 dib bg-dark-green pointer white\" \r\n                        type=\"submit\"\r\n                        onClick={onClickInput}\r\n                        >\r\n                        Detect\r\n                        </button>\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default InputImageURL;","import React from 'react';\r\n\r\nconst Rank = () => {\r\n    return (\r\n        <div className=\"white pa4\">\r\n            <div className=\"center f3\">\r\n                {`Username, your current rank is...`}\r\n            </div>\r\n            <div className=\"center f2\">\r\n                {`#5`}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\n\r\nconst Signin = ({onRouteChange}) => {\r\n    return (\r\n    <article className=\"br3 ba bg-mid-gray b--black-10 mv4 w-100 w-50-m w-25-l mw7 center shadow-5\">\r\n        <main className=\"pa5 white-80\">\r\n            <div className=\"measure\">\r\n                <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                <legend className=\"f4 fw6 ph0 mh0\">Sign In</legend>\r\n                <div className=\"mt3\">\r\n                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                    <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"></input>\r\n                </div>\r\n                <div className=\"mv3\">\r\n                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                    <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"></input>\r\n                </div>\r\n                </fieldset>\r\n                <div className=\"\">\r\n                <input \r\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib white no-underline\" \r\n                type=\"submit\" \r\n                value=\"Sign in\"\r\n                onClick={() => onRouteChange('home')}\r\n                >\r\n                </input>\r\n                </div>\r\n                <div className=\"lh-copy mt3\">\r\n                <p \r\n                className=\"f6 link dim black db white pointer\"\r\n                onClick={() => onRouteChange('register')}\r\n                >\r\n                Register</p>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    </article>\r\n    );\r\n}\r\n\r\nexport default Signin;","import React from 'react';\r\n\r\nconst Register = ({onRouteChange}) => {\r\n    return (\r\n    <article className=\"br3 ba bg-mid-gray b--black-10 mv4 w-100 w-50-m w-25-l mw7 center shadow-5\">\r\n        <main className=\"pa5 white-80\">\r\n            <div className=\"measure\">\r\n                <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                <legend className=\"f2 fw6 ph0 mh0\">Register</legend>\r\n                <div className=\"mt3\">\r\n                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n                    <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"name\"  id=\"name\"></input>\r\n                </div>\r\n                <div className=\"mt3\">\r\n                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                    <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"></input>\r\n                </div>\r\n                <div className=\"mv3\">\r\n                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                    <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"></input>\r\n                </div>\r\n                </fieldset>\r\n                <div className=\"lh-copy mt3\">\r\n                <p \r\n                    className=\"f6 link dim black db white pointer\"\r\n                    onClick={() => onRouteChange('home')}\r\n                >\r\n                Register</p>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    </article>\r\n    );\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport \"./FaceDetection.css\";\r\n\r\nconst FaceDetection = ({url, box}) => {\r\n    return (\r\n        <div className=\"center\">\r\n            <div className=\"absolute mt2 pa3\">\r\n            <img \r\n            src={url}\r\n            alt=\"\"\r\n            id=\"inputImage\"\r\n            >\r\n            </img>\r\n            {box.map(data =>{\r\n                return (\r\n                    <div \r\n                        className=\"bounding-box\"\r\n                        key={data.id}\r\n                        style={\r\n                        {\r\n                        top: data.topRow, \r\n                        bottom: data.bottomRow, \r\n                        right: data.rightCol,\r\n                        left: data.leftCol\r\n                        }\r\n                        }>\r\n                    </div>\r\n                )\r\n            })}\r\n            \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FaceDetection;","import React, {Component} from 'react';\nimport './App.css';\nimport Navigation from './Components/Navigation/Navigation';\nimport Logo from './Components/Logo/Logo';\nimport InputImageURL from './Components/InputImageURL/InputImageURL';\nimport Rank from './Components/Rank/Rank';\nimport Signin from './Components/Signin/Signin';\nimport Register from './Components/Register/Register';\nimport FaceDetection from './Components/FaceDetection/FaceDetection';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\n\nconst particlesOptions = {\n  \"particles\": {\n      \"number\": {\n          \"value\": 250,\n          \"density\": {\n              \"enable\": false\n          }\n      },\n      \"size\": {\n          \"value\": 3,\n          \"random\": true,\n          \"anim\": {\n              \"speed\": 4,\n              \"size_min\": 0.3\n          }\n      },\n      \"line_linked\": {\n          \"enable\": false\n      },\n      \"move\": {\n          \"random\": true,\n          \"speed\": 1,\n          \"direction\": \"top\",\n          \"out_mode\": \"out\"\n      }\n  },\n  \"interactivity\": {\n      \"events\": {\n          \"onhover\": {\n              \"enable\": true,\n              \"mode\": \"bubble\"\n          },\n          \"onclick\": {\n              \"enable\": true,\n              \"mode\": \"repulse\"\n          }\n      },\n      \"modes\": {\n          \"bubble\": {\n              \"distance\": 250,\n              \"duration\": 2,\n              \"size\": 0,\n              \"opacity\": 0\n          },\n          \"repulse\": {\n              \"distance\": 400,\n              \"duration\": 4\n          }\n      }\n  }\n}\n\nconst app = new Clarifai.App({\n  apiKey: '1548270e9c914499a6bb5029177bf6c7'\n });\n\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state={\n      input: '',\n      url: '',\n      box: [],\n      isSignedIn: false,\n      route: 'signin'\n    }\n  }\n\n  onInputChange = (event) =>{\n    this.setState({input: event.target.value});\n  }\n\n  calculateFaceBox = (data) =>{\n      const clariFace = data.outputs[0].data.regions.map(region => {\n        return region.region_info.bounding_box;\n      })\n      const image = document.getElementById('inputImage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return clariFace.map((bounding,i) => {\n          return {\n            id: i,\n            topRow: bounding.top_row * height,\n            bottomRow: height - (bounding.bottom_row * height),\n            leftCol: bounding.left_col * width,\n            rightCol: width - (bounding.right_col * width)\n          }\n      })\n  }\n\n  displayFaceBox = (boxData) => {\n    this.setState({box: boxData});\n  }\n\n  onClickInput = () =>{\n    this.setState({url: this.state.input});\n      app.models\n          .predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n          .then(response => this.displayFaceBox(this.calculateFaceBox(response)))\n          .catch(err => console.log(err))\n  }\n\n  onRouteChange = (route) =>{\n    if(route === 'home'){\n      this.setState({isSignedIn: true})\n    }else{\n      this.setState({isSignedIn: false})\n    }\n    this.setState({route: route})\n  }\n\n  render(){\n      const {url, box, isSignedIn, route} = this.state;\n      return (\n        <div>\n          <Particles className=\"particles\"\n              params={particlesOptions} \n          />\n          <Navigation\n            onRouteChange={this.onRouteChange}\n            isSignedIn = {isSignedIn}\n          />\n          {route === 'home'\n          ? \n          <div>\n            <Logo />\n            <Rank />\n            <InputImageURL \n              onInputChange={this.onInputChange} \n              onClickInput={this.onClickInput}\n            />\n            <FaceDetection url={url} box={box}/>\n          </div>\n          :\n          route === 'signin' \n          ?\n          <Signin onRouteChange={this.onRouteChange}/>\n          :\n          <Register onRouteChange={this.onRouteChange}/>\n          } \n        </div>\n    );\n    }\n  }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}